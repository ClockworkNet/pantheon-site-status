name: Update sinfo site
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 6 * * 1" # Runs at 6 AM on Mondays

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Terminus
        run: |
          wget https://github.com/pantheon-systems/terminus/releases/latest/download/terminus.phar
          chmod +x terminus.phar
          sudo mv terminus.phar /usr/local/bin/terminus

      - name: Authenticate with Pantheon
        run: |
          terminus auth:login --machine-token ${{ secrets.PANTHEON_MACHINE_TOKEN }}
      
      - name: Install Dart
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https
          sudo sh -c 'wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
          sudo sh -c 'wget -qO- https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'
          sudo apt-get update
          sudo apt-get install -y dart

      - name: Run Dart
        run: |
          dart pub get --directory=evaluator 
          dart ./evaluator/bin/main.dart --results-file=./site/data/sites.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Build static site
        run: |
          cd site
          npm install
          npm run build
          npm run generate

      - name: Deploy to S3
        run: |
          cd site
          aws s3 sync ./dist/ ${{ vars.AWS_S3_BUCKET }} --delete --acl public-read

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@master
        env:
          PATHS: '/*'
          DISTRIBUTION: ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
